name: CI/CD
on:
  push:
    branches:
      - set-config-for-deployment
env:
  API_IMAGE: ghcr.io/naoki-urabe/yajirobe/api:prod
  FRONT_IMAGE: ghcr.io/naoki-urabe/yajirobe/front:prod
  TASK_IMAGE: ghcr.io/naoki-urabe/yajirobe/task:prod
jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      #- name: set environemnt variable
      #  run: |
      #      echo ::set-env name=API_IMAGE::${{ env.API_IMAGE }}
      #      echo ::set-env name=FRONT_IMAGE::${{ env.FRONT_IMAGE }}
      #    echo ::set-env name=API_PORT::${{ secrets.API_PORT }}
      #    echo ::set-env name=FRONT_PORT::${{ secrets.FRONT_PORT }}
      #    edho ::set-env name=MYSQL_PORT::${{ secrets.MYSQL_TCP_PORT }}
      - name: Add environment variable to .env.prod
        run: |
          echo MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env.prod.db
          echo MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE }}" >> .env.prod.db
          echo MYSQL_TCP_PORT=54923 >> .env.prod.db
      - name: Add environment variable to .env.prod.api
        run: |
          echo API_PORT=50534 >> .env.prod.api
          echo DB_DRIVER_NAME=mysql >> .env.prod.api
          echo DB_NAME="${{ secrets.MYSQL_DATABASE }}" >> .env.prod.api
          echo DB_USERNAME=root >> .env.prod.api
          echo DB_USER_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env.prod.api
          echo DB_HOST=mysql_prod >> .env.prod.api
          echo DB_PORT=54923 >> .env.prod.api
      - name: Add environment variable to .env.prod.front
        run: |
          echo VUE_APP_API_PORT=50534 >> front/.env.production
          echo VUE_APP_FRONT_PORT=56294 >> front/.env.production
      - name: Add environment variable to .env.prod.front
        run: |
          echo VUE_APP_API_PORT=50534 >> .env.prod.front
          echo VUE_APP_FRONT_PORT=56294 >> .env.prod.front
      - name: Log in to Github packages
        run: echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: build image
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: push image
        run: |
          docker push ${{ env.API_IMAGE }}
          docker push ${{ env.FRONT_IMAGE }}
          docker push ${{ env.TASK_IMAGE }}